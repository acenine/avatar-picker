:root {
  --blue: rgb(122, 161, 178);
  --gray: rgb(155, 160, 163);
  --black: rgb(44, 48, 51);
  --shadow: rgb(102, 102, 102);
  --white: rgb(249, 249, 249);
  --av-size: 60px;
  --offset: -67.5px;

}
body {
  font: 16px "Source Sans Pro", sans-serif;
  background: var(--white);
  color: var(--white);
}
span {
  margin: 14px;
}
.container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
}

.pop-box {
  width: 300px;
  border-radius: 2px;
  background: var(--black);
  box-shadow: 2px 2px 10px var(--shadow);
  padding: 7px;
}
.triangle {
  width: 0;
  height: 0;
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
  border-bottom: 8px solid var(--black);
  z-index:1
}
/* Animations stuffs */

/*for open i want it to fade in and grow simulataneously to perhaps bigger than full size then quick small scale down to display size
on closing, it simply needs to shrink and fade. perhaps i'll do that one first*/
.open{
  animation: overbounce 0.5s forwards;
}
@keyframes overbounce {
  0% {
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0);
  }
  50% {
    -webkit-transform: scale(1.1);
    -ms-transform: scale(1.1);
    transform: scale(1.1);
  }
  100% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
  }
}
.close {
  animation: blip 0.2s forwards;
}
@keyframes blip {
  0% {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
  }
  50% {
    -webkit-transform: scale(.8);
    -ms-transform: scale(.8);
    transform: scale(.8);
  }
  100% {
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0);
  }
}

.closed {
  display: none;
}
/* ----------------- */


.collection {
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  width: 100%;
}
.avatar {
  width: var(--av-size);
  height: var(--av-size);
  border-radius: 50%;
  cursor: pointer;
}

.overlay {
  position: relative;
  top: var(--offset);
  left: -3px;
  border: 3px solid transparent;
}
.selected {
  border: 3px solid var(--blue);
}
.displayed {
  border: 1px solid transparent;
}

.displayed:hover, .displayed:focus {
  border: 1px solid var(--gray);
}

li {
  list-style: none;
  border: 3px solid transparent;
  margin: 0px 0px 7px 7px;
}

li:hover .overlay{
  border: 3px solid var(--gray);
  background-color: rgb(122, 161, 178, .2)
}

#loading, #loading:hover{
  border: 3px solid var(--blue);
  border-bottom: 3px solid transparent;
  background-color: transparent;
  animation: spin 1s linear infinite;
}
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
